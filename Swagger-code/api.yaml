openapi: 3.0.0
info:
  title: devHive API Documentation
  description: Written and tested by [Mr. Hasan](https://github.com/hasanshahriar32).
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Development Server
  - url: https://devhiveserver.vercel.app
    description: Internal staging server for testing
  - url: https://server-five-lime.vercel.app
    description: Main working server
paths:
  /user/{_id}:
    get:
      tags:
        - Get User Details of a single user
      summary: Detail info of a single user.
      description: Return a list of a user's detail info.
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
            example: "643378688002fac4f0138cbe"
      responses:
        "200":
          description: OK!

  /user:
    post:
      tags:
        - Register / Login User
      summary: Register user or (if exists) login a user.
      description: |
        Request:<br /><br />
        name (string)<br />
        email (required, string)<br />
        uid (required, string)<br />
        verified (boolean)<br />
        pic (string)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "hasan"
                email:
                  type: string
                  example: "email@unique.com"
                uid:
                  type: string
                  example: "UN1QU3uid"
                verified:
                  type: boolean
                  example: true
                pic:
                  type: string
                  example: "https://e1.pngegg.com/pngimages/444/382/png-clipart-frost-pro-for-os-x-icon-set-now-free-contacts-male-profile.png"
      responses:
        "200":
          description: The web server is working correctly!
        "201":
          description: User create success!
        "422":
          description: User already exists!
        "400":
          description: Invalid user data!

  /user/all:
    get:
      tags:
        - Get All User Info
      summary: Detail info of all users.
      description: Only admins can access this endpoint.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK!
    security:
      - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
      description: Enter your JWT token with the prefix 'Bearer '.
